- hosts: localhost
  connection: local
  become: yes
  gather_facts: false
  vars: 
    repo_dir: /app
    project_dir: "{{ repo_dir }}/simpletask"
    project_repo: https://github.com/vmkolev/simpletask.git

  tasks:

# Configuration repo Git
  - name: Setup git configuration
    git_config:
      name="{{ item.name }}"
      scope=global
      value="{{ item.value }}"
    with_items:
      - {name: "user.name",  value: "vmkolev" }
      - {name: "user.email", value: "kolevvm@gmail.com" }
      - {name: "ui.color",   value: "True" }
    become: true

# Remove project folder if exist
  - name: Remove project directory
    file:
      path: "{{ repo_dir }}"
      state: absent

# Creates project folder
  - name: Creates PROJECT directory
    file:
      path: "{{ repo_dir }}"
      state: directory

# Download repo from Git
  - name: Get  Project from git
    git:
      repo: "{{ project_repo }}"
      dest: "{{ repo_dir }}"
#      clone: yes
      update: yes
      force: yes
#    become: true    

# Download packages
  - name: install packages
    include: "{{ project_dir }}/packages.yml"

# Prepare local ENV for docker
  - name: Install Docker Dependencies
    shell: |
        curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmor -o /usr/share/keyrings/docker-archive-keyring.gpg
        echo "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/docker-archive-keyring.gpg] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable" | sudo tee /etc/apt/sources.list.d/docker.list > /dev/null
        curl -L "https://github.com/docker/compose/releases/download/1.29.2/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
        chmod +x /usr/local/bin/docker-compose

# Install Docker compose
  - name: Install docker-compose
    shell: |
        apt-get update 
        apt-get install docker-ce docker-ce-cli containerd.io -y
        usermod -aG docker $USER
        newgrp docker

# Enable service 
  - name: Start and Enable Docker Daemon
    service:
      name: docker
      state: started
      enabled: true

#  - name: firewall
#    shell: firewall-cmd --add-port={9000,80,3306,9323,9090,9104}/tcp --permanent && firewall-cmd --reload

  - name: Configure Docker metrics for Prometheus
    become: yes
    copy:
      src: "{{ project_dir }}/monitoring/daemon.json"
      dest: /etc/docker/

  - name: Start Application environment via docker-compose
    shell: "cd {{ project_dir }} && docker-compose build"

#  - name: Run docker-compose
#    shell: docker-compose up -d
